{"version":3,"sources":["components/generateQrcode/index.js","components/collection/index.js","App.js","reportWebVitals.js","index.js"],"names":["generate","value","opt","QRCode","toDataURL","margin","store","addPlugin","operationsPlugin","GenerateQrcode","props","state","qrCodeImg","width","handleChange","bind","resize","action","event","this","setState","target","then","url","catch","err","console","error","copy","fetch","base64Response","blob","item","window","ClipboardItem","navigator","clipboard","write","location","href","a","document","createElement","download","click","last","get","Array","isArray","find","it","push","set","theme","original","className","multiline","rows","onChange","fullWidth","placeholder","onClick","size","min","max","step","defaultValue","marks","label","orientation","src","square","Component","observerPlugin","Collection","collection","delete","observe","val","filter","head","map","index","style","textAlign","role","aria-label","GlobalStyles","createGlobalStyle","ms_sans_serif","ms_sans_serif_bold","styleReset","App","open","setOpen","bool","backgroundColor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f10f6db6.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport QRCode from \"qrcode\";\nimport {TextField, Slider, Avatar, Button} from 'react95'\nimport './style.css';\nimport {ThemeProvider} from 'styled-components';\nimport original from \"react95/dist/themes/original\";\nimport copy from 'copy-to-clipboard';\nimport store from 'store';\nimport operationsPlugin from 'store/plugins/operations';\n\nstore.addPlugin(operationsPlugin);\n\nfunction generate(value, opt) {\n  if (!value) {\n    value = 'none'\n  }\n  return QRCode.toDataURL(value, {...opt, margin: 1});\n}\n\nclass GenerateQrcode extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      qrCodeImg: '',\n      width: 200,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.resize = this.resize.bind(this);\n    this.action = this.action.bind(this);\n  }\n\n  resize(event, value) {\n    this.setState({\n      width: value\n    });\n  }\n\n  handleChange(event) {\n    const {value} = event.target;\n    const {width} = this.state;\n    generate(value, {width})\n      .then(url => {\n        this.setState({\n          qrCodeImg: url\n        })\n      })\n      .catch(err => {\n        console.error(err)\n      });\n    this.setState({value});\n  }\n\n  componentDidMount() {\n    const {value, width} = this.state;\n    generate(value, {width})\n      .then(url => {\n        this.setState({\n          qrCodeImg: url\n        })\n      })\n      .catch(err => {\n        console.error(err)\n      });\n  }\n\n  async action(action) {\n    const {value, qrCodeImg} = this.state;\n    switch (action) {\n      case 'copy':\n        copy(value);\n        break;\n      case 'copy-qrcode':\n        const base64Response = await fetch(`${qrCodeImg}`);\n        const blob = await base64Response.blob();\n        const item = new window.ClipboardItem({\"image/png\": blob});\n        navigator.clipboard.write([item]);\n        break;\n      case 'download-qrcode':\n        window.location.href = qrCodeImg;\n        const a = document.createElement(\"a\");\n        a.href = qrCodeImg;\n        a.download = `${value}.png`;\n        a.click();\n        break;\n      case 'collect':\n        const last = store.get('collection')\n        if (last && Array.isArray(last)) {\n          if (!last.find(it => it === value)) {\n            last.push(value);\n            store.set('collection', last)\n          }\n        } else {\n          store.set('collection', [value]);\n        }\n        break;\n      case 'clear':\n        this.setState({\n          value: '',\n        });\n        const { width} = this.state;\n        generate('http', {width})\n          .then(url => {\n            this.setState({\n              qrCodeImg: url\n            })\n          })\n          .catch(err => {\n            console.error(err)\n          });\n    }\n  }\n\n  render() {\n    const {qrCodeImg, value, width} = this.state;\n    return (\n      <ThemeProvider theme={original}>\n\n        <div className='generate-qr-code-c'>\n          <div className='generate-qr-code-c-left'>\n            <TextField multiline rows={10} value={value} onChange={this.handleChange} fullWidth placeholder=\"请输入链接...\"/>\n            <div className='generate-qr-code-c-left-action'>\n              <Button onClick={() => this.action('clear')}>清空</Button>\n              <Button onClick={() => this.action('collect')}>收藏链接</Button>\n              <Button onClick={() => this.action('copy')}>复制链接</Button>\n              <Button onClick={() => this.action('copy-qrcode')}>复制二维码</Button>\n              <Button onClick={() => this.action('download-qrcode')}>下载二维码</Button>\n            </div>\n          </div>\n          <div className='generate-qr-code-c-right'>\n            <div className='generate-qr-code-resize'>\n              <div className=\"generate-qr-code-resize-slide\">\n                <Slider\n                  size='280px'\n                  min={100}\n                  max={300}\n                  step={25}\n                  defaultValue={200}\n                  marks={[\n                    {value: 300, label: '300px'},\n                    {value: 250, label: '250px'},\n                    {value: 200, label: '200px'},\n                    {value: 150, label: '150px'},\n                    {value: 100, label: '150px'},\n                  ]}\n                  onChange={this.resize}\n                  orientation='vertical'\n                />\n              </div>\n              <div className=\"generate-qr-code-resize-code\">\n                <Avatar size={width} src={qrCodeImg} square />\n              </div>\n            </div>\n          </div>\n        </div>\n      </ThemeProvider>\n    )\n  }\n}\n\nexport default GenerateQrcode;\n","import React, {Component} from \"react\";\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableHead,\n  TableRow,\n  TableHeadCell,\n  TableDataCell,\n  Cutout,\n} from 'react95';\nimport store from 'store';\nimport copy from 'copy-to-clipboard';\nimport observerPlugin from 'store/plugins/observe';\n\nstore.addPlugin(observerPlugin);\n\n\nclass Collection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collection: [],\n    };\n    this.delete = this.delete.bind(this);\n    this.copy = this.copy.bind(this);\n  }\n\n  componentDidMount() {\n    store.observe('collection', (val) => {\n      if (val) {\n        this.setState({\n          collection: val\n        })\n      }\n    });\n  }\n\n  delete(url) {\n    const collection = store.get('collection');\n    store.set('collection', collection.filter(it => it !== url))\n  }\n\n  copy(url) {\n    copy(url);\n  }\n\n  render() {\n    const {\n      collection\n    } = this.state;\n    return (\n      <div>\n        <Table>\n          <TableHead>\n            <TableRow head>\n              <TableHeadCell>序号</TableHeadCell>\n              <TableHeadCell>链接</TableHeadCell>\n              <TableHeadCell>操作</TableHeadCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {collection.map((it, index) => <TableRow key={index}>\n              <TableDataCell style={{textAlign: 'center'}}>\n              <span role='img' aria-label='LEAF'>\n                {index + 1}\n              </span>\n              </TableDataCell>\n              <TableDataCell>{it}</TableDataCell>\n              <TableDataCell style={{textAlign: 'center'}}>\n                <Button onClick={() => this.delete(it)}>删除</Button>\n                <Button onClick={() => this.copy(it)}>复制</Button>\n              </TableDataCell>\n            </TableRow>)}\n          </TableBody>\n        </Table>\n      </div>\n    )\n  }\n}\n\nexport default Collection;\n","import React, {Component} from 'react';\nimport GenerateQrcode from './components/generateQrcode';\nimport {createGlobalStyle, ThemeProvider} from 'styled-components';\nimport Collection from './components/collection';\nimport {styleReset} from 'react95';\nimport original from \"react95/dist/themes/original\";\nimport ms_sans_serif from \"react95/dist/fonts/ms_sans_serif.woff2\";\nimport ms_sans_serif_bold from \"react95/dist/fonts/ms_sans_serif_bold.woff2\";\n\nconst GlobalStyles = createGlobalStyle`\n  @font-face {\n    font-family: 'ms_sans_serif';\n    src: url('${ms_sans_serif}') format('woff2');\n    font-weight: 400;\n    font-style: normal\n  }\n\n  @font-face {\n    font-family: 'ms_sans_serif';\n    src: url('${ms_sans_serif_bold}') format('woff2');\n    font-weight: bold;\n    font-style: normal\n  }\n\n  body {\n    font-family: 'ms_sans_serif';\n  }\n\n  ${styleReset}\n`;\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n    };\n    this.setOpen = this.setOpen.bind(this);\n  }\n\n\n  setOpen(bool) {\n    this.setState({\n      open: bool\n    })\n  }\n\n  render() {\n    return (\n      <div style={{backgroundColor: 'rgb(198, 198, 198)'}}>\n        <GlobalStyles/>\n        <ThemeProvider theme={original}>\n          <GenerateQrcode/>\n          <Collection/>\n        </ThemeProvider>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}